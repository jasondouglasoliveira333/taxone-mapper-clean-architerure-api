server.port=8181

spring.servlet.multipart.maxFileSize: 100050MB
spring.servlet.multipart.maxRequestSize: 100050MB

spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:file:./taxone
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

#spring.datasource.url=jdbc:mysql://localhost:3306/test
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=DEUSjason333

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57InnoDBDialect

spring.jpa.hibernate.ddl-auto=update

#spring.jpa.show-sql= true

#App config
lkm.taxonemapper.jobs.schedulesender.cron=0 * * * * *
lkm.taxonemapper.jobs.updateschedulestatus.cron=0 * * * * *
lkm.taxonemapper.integration.codEmpresa=076
lkm.taxonemapper.integration.codEstab=0001

lkm.taxonemapper.email.smtp.host=smtp.gmail.com
lkm.taxonemapper.email.smtp.username=XXX
lkm.taxonemapper.email.smtp.password=YYY

lkm.taxonemapper.datasource.dateTimeFieldName=DATAHORA_INCLUSAO

jwt.secret=javainuse

logging.level.br : debug
#logging.level.org.hibernate.type : trace


nameService.host=localhost
nameService.port=8081

# configure hystrix
# when we have more than 5 requests per 10 seconds that 50%+ fails
# then open circuit and call fallback immediately
camel.hystrix.circuit-breaker-request-volume-threshold=5
camel.hystrix.circuit-breaker-error-threshold-percentage=50
camel.hystrix.metrics-rolling-percentile-window-in-milliseconds=10000

# hystrix logging
#logging.level.org.apache.camel.component.hystrix.processor=DEBUG

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true
management.health.defaults.enabled=false

camel.health.enabled=false
camel.health.indicator.enabled=true
